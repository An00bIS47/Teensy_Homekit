; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html
[platformio]
default_envs =
	teensy_41
	teensy_41_debug

[plugins]
bme280 = 1
led = 1
dht = 0
hygrometer = 0
knx = 0

; =========================================================================================================
;
; Common
;
; =========================================================================================================
[common]
; ======================================================
; lib_deps: common
; ======================================================
lib_deps =
	bblanchon/ArduinoJson@^6.18.0
	bblanchon/StreamUtils@^1.6.1
	rlogiacco/CircularBuffer@^1.3.3
	; BME280
	adafruit/Adafruit BME280 Library@^2.1.2
	; DHT
	adafruit/DHT sensor library@^1.4.2
	adafruit/Adafruit Unified Sensor@^1.1.4
	; QRCode
	ricmoo/QRCode@^0.0.1
	; Timezone
	jchristensen/Timezone@^1.2.4

; ======================================================
; build_flags: common
; ======================================================
build_flags =
	-Wno-unknown-pragmas
	-Wno-sign-compare
	-D ARDUINOJSON_USE_LONG_LONG=1
    -D HAP_FAKEGATO_INTERVAL=300000
    -D MASK_VERSION=0x07B0

build_includes =
	-Isrc/Crypto
	-Isrc/HAP
	-Isrc/HAP/plugins
    -Ilib/extRAM_t4

; ======================================================
; debug_flags: common
; ======================================================
debug_flags =
	-D HAP_DEBUG=1
	-D HAP_DEBUG_PAIRINGS=0
	-D HAP_DEBUG_HOMEKIT=1
	-D HAP_DEBUG_FAKEGATO=1
	-D HAP_DEBUG_FAKEGATO_SCHEDULE=0
	-D HAP_DEBUG_HOMEKIT_REQUEST=0
	-D HAP_DEBUG_TLV8=0
	-D HAP_DEBUG_EVENTMANAGER=0
	-D HAP_DEBUG_CONFIGURATION=0
	-D LOG_LEVEL=6


; ======================================================
; source: all negated
; ======================================================
src_filter =
 	-<*>
 	-<HAP/*>
 	-<Crypto/*>
 	-<HAP/plugins/*>
	+<main.cpp>

; ======================================================
; source: HAP
; ======================================================
src_filter_hap =
	+<HAP/EventManager.cpp>
	+<HAP/HAPAccessory.cpp>
	+<HAP/HAPAccessorySet.cpp>
	+<HAP/HAPClient.cpp>
	+<HAP/HAPConfiguration.cpp>
	+<HAP/HAPDailyTimer.cpp>
	+<HAP/HAPDailyTimerFactory.cpp>
	+<HAP/HAPDeviceID.cpp>
	+<HAP/HAPEncryption.cpp>
	+<HAP/HAPFakegato+Schedule.cpp>
	+<HAP/HAPFakegato+ScheduleEnergy.cpp>
	+<HAP/HAPFakegato.cpp>
	+<HAP/HAPFakegatoFactory.cpp>
	+<HAP/HAPHash.cpp>
	+<HAP/HAPHelper.cpp>
	+<HAP/HAPLogging.cpp>
	+<HAP/HAPPlugins.cpp>
	+<HAP/HAPPrintBuffered.cpp>
	+<HAP/HAPPrintChunked.cpp>
	+<HAP/HAPPrintEncrypted.cpp>
	+<HAP/HAPPrintPlus.cpp>
	+<HAP/HAPRequest.cpp>
	+<HAP/HAPSRP.cpp>
	+<HAP/HAPServer.cpp>
	+<HAP/HAPService.cpp>
	+<HAP/HAPTLV8.cpp>
	+<HAP/HAPTime.cpp>
    +<HAP/base36.c>
    +<HAP/concat.c>

; ======================================================
; source: Crypto
; ======================================================
src_filter_crypto =
	+<Crypto/m_X25519.c>
	+<Crypto/m_chacha20_poly1305.c>
	+<Crypto/m_ed25519.c>
	+<Crypto/m_hkdf.c>

; ======================================================
; extra_scripts: common
; ======================================================
extra_scripts =
	pre:scripts/platformio/pre_increment_version.py
	pre:scripts/platformio/pre_config_builder.py
	pre:scripts/platformio/pre_debug_macro.py
	;post:scripts/platformio/post_custom_debug_flags.py
	post:scripts/platformio/post_upload_delay.py
	scripts/platformio/custom_targets.py



; ======================================================
;
; platform: ESP32
;
; ======================================================
src_filter_esp32 =
	+<HAP/HAPBonjour.cpp>
	+<HAP/HAPPreferencesExt.cpp>

src_filter_esp32_config_prefs =
	+<HAP/HAPConfigurationPreferences.cpp>


src_filter_esp32_wifi =
	+<HAP/HAPWiFiHelper.cpp>


; ======================================================
;
; platform: Teensy
;
; ======================================================
teensy_flags =
	;-D TEENSY_OPT_FAST
	;-D CORE_TEENSY


teensy_lib_flags =
	-D FNET_CFG_DEBUG_MDNS=0
	-D FNET_CFG_DEBUG=0
	-D FNET_CFG_TLS=0


teensy_lib_deps =
	adamvr/base64@^1.0.0
	sstaub/TeensyID@^1.3.1
    FNET
    NativeEthernet
    Wire
	TeensyDebug

teensy_lib_ignore =

teensy_test_ignore =
	${common.test_desktop}

; ======================================================
;
; option: Configuration - Teensy - SPIFFS - External
;
; ======================================================
[option_teensy_config_spiffs_ext]
teensy_config_spiffs_ext_build_flags =
    -D HAP_USE_SPIFFS_CONFIGURATION=1

teensy_config_spiffs_ext_src_filter =
	+<HAP/HAPConfigurationT41SPIFFSExt.cpp>

; ======================================================
;
; option: Configuration - Teensy - SPIFFS - Internal
;
; ======================================================
[option_teensy_config_spiffs_int]
teensy_config_spiffs_int_build_flags =
    -D HAP_USE_SPIFFS_CONFIGURATION=1

teensy_config_spiffs_int_src_filter =
	+<HAP/HAPConfigurationT41SPIFFSInt.cpp>

; ======================================================
;
; option: Configuration - EEPROM
;
; ======================================================
[option_config_eeprom]
config_eeprom_build_flags =
    -D HAP_USE_EEPROM=1

config_eeprom_src_filter =
	+<HAP/HAPConfigurationEEPROM.cpp>

config_eeprom_lib_deps =

; ======================================================
;
; option: Keystore
;
; ======================================================
[option_keystore]
keystore_build_flags =
    -D HAP_ENABLE_KEYSTORE=1

keystore_src_filter =
	+<HAP/HAPKeystore.cpp>

; ======================================================
;
; option: QRCode
;
; ======================================================
[option_qrcode]
qrcode_build_flags =
    -D HAP_PRINT_QRCODE_SVG=1
	-D HAP_PRINT_QRCODE=1
	-D HAP_GENERATE_XHM=1

qrcode_src_filter =
	+<HAP/HAPSVG.cpp>

; ======================================================
;
; option: WebServer
;
; ======================================================
[option_webserver]
webserver_build_flags =
    -D HAP_ENABLE_WEBSERVER=1
	-D HAP_WEBSERVER_USE_SSL=1
	-D HTTPS_DISABLE_SELFSIGNING=1

webserver_src_filter =
	+<HAP/HAPWebServer.cpp>
	+<HAP/HAPWebServerBodyParserMultipart.cpp>
	+<HAP/HAPWebServerBodyParserURLEncoded.cpp>
	+<HAP/HAPWebServerJWT.cpp>
	+<HAP/HAPWebServerTemplateProcessor.cpp>


; ======================================================
;
; option: OTA + Update
;
; ======================================================
[option_ota_update]
ota_update_build_flags =
    -D HAP_ENABLE_UPDATE_OTA=1
	-D HAP_ENABLE_UPDATE_WEB=0

ota_update_src_filter =
	+<HAP/HAPUpdate.cpp>

; ======================================================
;
; option: NTP
;
; ======================================================
[option_ntp]
ntp_build_flags =
    -D HAP_ENABLE_NTP=1

; ======================================================
;
; option: TeensyDebug
;
; ======================================================
[option_teensy_debug]
teensy_debug_build_flags =
	-D TEENSY_OPT_DEBUG
	-D TEENSY_DEBUG=1
	-D CORE_TEENSY
	-D USB_DUAL_SERIAL



; ======================================================
;
; option: NTP
;
; ======================================================
[option_reset]
reset_build_flags =
    -D HAP_RESET_CONFIGURATION=1



; deprecated
[deprecated]
src_filter_deprecated =
	+<HAP/HAPLogger.cpp>


; ======================================================
;
; plugin: bme280
;
; ======================================================
[plugin_bme280]
bme280_build_flags =
	-D HAP_PLUGIN_USE_BME280=1
	-D HAP_PLUGIN_BME280_USE_DUMMY=1

bme280_cpp_path =
	-Isrc/HAP/plugins/BME280

bme280_src_filter =
	+<HAP/plugins/BME280/HAPPluginBME280.cpp>

bme280_lib_deps =
	adafruit/Adafruit BME280 Library@^2.1.2

; ======================================================
;
; plugin: led
;
; ======================================================
[plugin_led]
led_build_flags =
	-D HAP_PLUGIN_USE_LED=1
	-D HAP_LED_PIN=BUILTIN_LED
	-D HAP_PLUGIN_LED_INTERVAL=712

led_cpp_path =
	-Isrc/HAP/plugins/LED

led_src_filter =
	+<HAP/plugins/LED/HAPPluginLED.cpp>

led_lib_deps =

; ======================================================
;
; plugin: dht
;
; ======================================================
[plugin_dht]
dht_build_flags =
	-D HAP_PLUGIN_USE_DHT=1
	-D HAP_PLUGIN_DHT_USE_DUMMY=1

dht_cpp_path =
	-Isrc/HAP/plugins/DHT

dht_src_filter =
	+<HAP/plugins/DHT/HAPPluginDHT.cpp>

dht_lib_deps =


; ======================================================
;
; plugin: hygrometer
;
; ======================================================
[plugin_hygrometer]
hygrometer_build_flags =
	-D HAP_PLUGIN_USE_HYGROMETER=1
	-D HAP_PLUGIN_HYGROMETER_USE_DUMMY=1

hygrometer_cpp_path =
	-Isrc/HAP/plugins/Hygrometer

hygrometer_src_filter =
	+<HAP/plugins/Hygrometer/HAPPluginHygrometer.cpp>

; ======================================================
;
; plugin: knx
;
; ======================================================
[plugin_knx]
knx_build_flags =
	-D MASK_VERSION=0x07B0
	-D KNX_FLASH_SIZE=4284
	-D HAS_FUNCTIONAL=1
	-D NO_KNX_CONFIG=1
	-D USE_TP=1
	-D HAP_PLUGIN_USE_KNX=1

knx_cpp_path =
	-Isrc/HAP/plugins/KNX

knx_src_filter =
	+<HAP/plugins/KNX/HAPPluginKNX.cpp>
	+<HAP/plugins/KNX/HAPPluginKNXDevice.cpp>
	+<HAP/plugins/KNX/HAPPluginKNXDeviceOutlet.cpp>
	+<HAP/plugins/KNX/HAPPluginKNXDeviceSwitch.cpp>
	+<HAP/plugins/KNX/HAPPluginKNXDeviceWeather.cpp>

knx_lib_deps =


; ============================================================================================================
;
; env
;
; ============================================================================================================
[env]
monitor_filters = time
monitor_speed = 115200


; ============================================================================================================
;
; env: teensy_41
;
; ============================================================================================================
[env:teensy_41]
platform = teensy
framework = arduino
platform_packages =
	framework-arduinoteensy@http://SynologyNAS:30000/michael/teensy-core-pio-package.git#1.54beta12

board = teensy41

upload_protocol = teensy-gui

build_flags =
	${common.build_flags}
    ${common.build_includes}
	${common.debug_flags}
	${common.teensy_flags}
	${common.teensy_lib_flags}

lib_deps =
	${common.lib_deps}
	${common.teensy_lib_deps}

lib_ignore =
	${common.teensy_lib_ignore}

extra_scripts =
	${common.extra_scripts}

src_filter =
	${common.src_filter}
	${common.src_filter_hap}
	${common.src_filter_crypto}

;
; custom options
;
custom_options =
    teensy_debug = 0
	teensy_config_spiffs_ext = 0
	teensy_config_spiffs_int = 0
    config_eeprom = 1
    qrcode = 0
	ntp = 1
	webserver = 0
	ota_update = 0
	keystore = 0
	reset = 1

; ============================================================================================================
;
; env: teensy_41_debug
;
; ============================================================================================================
[env:teensy_41_debug]
extends = env:teensy_41
build_type = debug

;
; custom options
;
custom_options =
	teensy_debug = 1
    teensy_config_spiffs_ext = 0
	teensy_config_spiffs_int = 0
    config_eeprom = 1
    qrcode = 0
	ntp = 1
	webserver = 0
	ota_update = 0
	keystore = 0
	reset = 0

; ============================================================================================================
;
; env: native
;
; ============================================================================================================
[env:native]
build_type = debug
platform = native
lib_compat_mode = off
build_flags =
	-std=gnu++11
	-lmbedtls
	-lmbedcrypto
	-D NATIVE=1

lib_ignore =
	QRCode
	FNET
	adafruit/Adafruit DHT

lib_deps =
	ArduinoFake